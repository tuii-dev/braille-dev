name: "Build Application"
description: "Build application"
inputs:
  AWS_ACCESS_KEY_ID:
    required: true
    description: "The AWS access key ID"
  AWS_SECRET_ACCESS_KEY:
    required: true
    description: "The AWS secret access key"
  AWS_REGION:
    required: true
    description: "The AWS region to deploy resources"
  IMAGE_TAG:
    required: true
    description: "The tag of the image to deploy to ECR"
runs:
  using: "composite"
  # This action uses the `composite` syntax to combine multiple actions into one.
  # The `composite` action runs each action in the list in order, and if any action
  # fails, then the entire action fails.
  steps:
    # - uses: hashicorp/setup-terraform@v1
    #   with:
    #     terraform_wrapper: false
    #     cli_config_credentials_token: ${{ inputs.TF_TOKEN }}

    # - name: Expose ECR
    #   id: ecr_env
    #   working-directory: infrastructure/shared
    #   shell: bash
    #   run: |
    #     terraform init
    #     echo "ECR_REPOSITORY_URL=$(terraform output -raw ECR_REPOSITORY_URL)" >> $GITHUB_ENV
    #     echo "CI_USER_ACCESS_KEY_ID=$(terraform output -raw AWS_ACCESS_KEY_ID)" >> $GITHUB_ENV
    #     echo "CI_USER_ACCESS_KEY_SECRET=$(terraform output -raw AWS_SECRET_ACCESS_KEY)" >> $GITHUB_ENV
    #   env:
    #     TF_WORKSPACE: ${{ inputs.WORKSPACE }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.AWS_REGION }}

    - name: Login to Amazon ECR
      id: ecr_auth
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: "true"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        platforms: linux/amd64
        context: .
        file: ./packages/application/Dockerfile
        push: true
        tags: |
          ${{ inputs.IMAGE_TAG }}
